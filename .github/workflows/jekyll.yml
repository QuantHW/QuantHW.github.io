name: Deploy Jekyll site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest  # Change to `ubuntu-24.04` if you specifically want to test newer runners
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby using ruby/setup-ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      # Fallback Ruby install if ruby/setup-ruby fails on newer Ubuntu versions
      - name: Fallback Ruby install (if needed)
        if: failure()
        run: |
          sudo apt-get update
          sudo apt-get install -y git build-essential libssl-dev zlib1g-dev libreadline-dev
          git clone https://github.com/rbenv/rbenv.git ~/.rbenv
          git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> $GITHUB_ENV
          echo 'eval "$(rbenv init - bash)"' >> $GITHUB_ENV
          export PATH="$HOME/.rbenv/bin:$PATH"
          eval "$(rbenv init - bash)"
          rbenv install 3.1.4
          rbenv global 3.1.4
          gem install bundler
          bundle install

      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build Jekyll site
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
